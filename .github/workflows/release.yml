name: Docker Image release

on:
  release:
    types:
      - released

jobs:
  BuildImages:
    runs-on: floryn90-runners

    steps:
      - name: Install curl & gpg
        shell: bash
        run: sudo apt update && sudo apt -y install curl gpg jq git && sudo apt clean

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1
        
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build essential
        shell: bash
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get install dirmngr -y
          sudo apt-get update
          sudo apt-get install gh build-essential wget -y
          sudo apt-get autoclean
          sudo apt-get autoremove
          sudo rm -rf /var/lib/apt/lists/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get previous release tag
        id: release_tag
        shell: bash
        run: |
          releases=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/gohugoio/hugo/releases?per_page=1&page=1)
          release_tag=$(echo $releases | jq '.[1].tag_name' | sed 's/v//g' | sed 's/"//g')
          echo "Latest release tag is ${release_tag}"
          echo "latest_release_tag=${release_tag}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.TOKEN_GITHUB }}   

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: floryn90/hugo
      #     tags: |
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-base
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-alpine
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-alpine-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-alpine-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-asciidoctor
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-asciidoctor-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-asciidoctor-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-pandoc
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-pandoc-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-pandoc-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-alpine
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-alpine-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-alpine-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-asciidoctor
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-asciidoctor-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-asciidoctor-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-pandoc
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-pandoc-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-pandoc-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-busybox
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-busybox-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-busybox-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-debian
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-debian-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-debian-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-debian
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-latest-ext
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-debian-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-debian-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ubuntu
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ubuntu-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ubuntu-onbuild
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-ubuntu-ci
      #       type=raw,value=${{steps.release_tag.outputs.latest_release_tag}}-ext-ubuntu-onbuild

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: floryn90
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prepare
        shell: bash
        run: make prepare

      - name: Build
        shell: bash
        run: make build

      - name: Upload target content
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: target

      # Compare the image built in the pull request with the one in production
      # - name: Docker Scout
      #   id: docker-scout
      #   uses: docker/scout-action@v1
      #   with:
      #     image: ${{ steps.meta.outputs.tags }}
      #     command: cves,quickview,compare
      #     to: docker.io/${{ steps.meta.outputs.tags }}
      #     ignore-unchanged: true
      #     only-severities: critical,high
      #     organization: floryn90

      - name: Push images
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: make push-release
      
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: floryn90
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: floryn90/hugo
